<?php
// $Id$

/**
 * @file
 * Example module to demonstrate using the menu system.
 * 
 * For more information about hook_menu(), see:
 * http://api.drupal.org/api/drupal/modules--system--system.api.php/function/hook_menu/7
 *
 * In this file, we are demonstrating how to define your own title callback function
 * to create dynamic titles.
 */

/**
 * Implements hook_menu().
 */
function pages_menu() {
  $items['pages'] = array(
    'title' => 'Menu system examples',
    'description' => 'Menu system example that returns a string.',
    'page callback' => 'pages_string',
    'access callback' => TRUE,
  );
  $items['pages/default'] = array(
    'title' => 'String',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['pages/render-array'] = array(
    'title' => 'Render array',
    'description' => 'Menu system example using a render array.',
    'page callback' => 'pages_render_array',
    'access arguments' => array('access content'),
    'weight' => 2,
    'type' => MENU_LOCAL_TASK,
  );
  $items['pages/render-array/tab1'] = array(
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'title' => 'Tab 1',
  );
  $items['pages/render-array/tab2'] = array(
    'title' => 'Tab 2',
    'description' => 'Demonstrating secondary tabs.',
    'page callback' => 'pages_render_array',
    'access callback' => TRUE,
    'type' => MENU_LOCAL_TASK,
  );
  $items['pages/callback'] = array(
    'title' => 'Example of a callback type',
    'page callback' => 'pages_render_array',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['pages/argument'] = array(
    'title' => 'Argument',
    'description' => 'Menu system example using an argument.',
    'page callback' => 'pages_argument',
    'access arguments' => array('access content'),
  );
  $items['pages/%/placeholder'] = array(
    'title' => 'Placeholder',
    'description' => 'Menu system example using a placeholder.',
    'page callback' => 'pages_argument',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
  );
  $items['pages/object/%pages_object'] = array(
    'title' => 'Object',
    'description' => 'Menu system example using a placeholder.',
    'page callback' => 'pages_object',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
  );
  $items['pages/title/%'] = array(
    'description' => 'Example of a dynamic title.',
    'page callback' => 'pages_render_array',
    'access callback' => TRUE,
    'title callback' => 'pages_title_callback',
    'title arguments' => array(2),
  );

  return $items;
}


/**
 * Menu callback; page callback returning a simple string.
 */
function pages_string() {
  $output = '
    <p>Pages can be returned as strings.</p>
    <p>Pages can be returned as <em>render arrays</em>.</p>';
  $output .= theme('item_list', array(
    'title' => 'Render arrays are better because...',
    'items' => array(
      'They allow content to be modified as an array.',
      'Arrays are a lot easier to modify than HTML.',
    ))
  );

  return $output;
}


/**
 * Menu callback; page callback returning a render array.
 */
function pages_render_array() {
  $build = array(
    'string_paragraph' => array(
      '#type' => 'markup',
      '#markup' => '<p>Pages can be returned as strings.</p>',
    ),
    'render_array_paragraph' => array(
      '#type' => 'markup',
      '#markup' => '<p>Pages can be returned as <em>render arrays</em>.</p>',
    ),
    'why_render_arrays' => array(
      '#items' => array('They allow content to be modified as an array.', 'Arrays are a lot easier to modify than HTML.'),
      '#title' => 'Render arrays are better because...',
      '#theme' => 'item_list',
    ),
  );

  return $build;
}


/**
 * Menu callback; page callback returning an argument.
 */
function pages_argument($arg1) {
  $build['argument_paragraph'] = array(
    '#type' => 'markup',
    '#markup' => '<p>' . t('The argument passed was @arg1.', array('@arg1' => $arg1)) . '</p>',
  );

  return $build;
}


/**
 * Example of passing an argument to be loaded as an object.
 */
function pages_object_load($id) {
  return array(
    'id' => $id,
    'times_two' => $id * 2,
    'additional_info' => 'Some additonal information about this object loaded from the database',
  );
}


/**
 * Return a default for the pages_object_load() function.
 */
function pages_object_to_arg($arg) {
  return empty($id) ? 42 : $id;
}


/**
 * Example of using a argument_load() function to load additional information into
 * argument before passing to page callback.
 */
function pages_object($object) {
  return array(
    '#type' => 'markup',
    '#markup' => t('The id is @id and that times 2 is @times_two.', array('@id' => $object['id'], '@times_two' => $object['times_two'])),
  );
}


/**
 * Example of a page title callback function.
 */
function pages_title_callback($arg) {
  return 'There is an argument in this title: ' . $arg;
}